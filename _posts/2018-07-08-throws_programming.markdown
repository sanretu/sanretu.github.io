---
layout: post
title: "非検査例外におけるthrowsを記載するかどうか"
---

まず発端がこの[ツイート](https://twitter.com/302_gf/status/1014344249037320192?s=12)

このときの自分の立場は
「throws宣言は強制されないから書かなくて良い」
という立場  
特別理由みたいなのは考えていなかったのでこの機会に少し調べて考えてみることに

## とりあえず結論として
自分の中ではthrows宣言は記載する必要は無い。  
具体的な理由は後述していく。

## throws宣言を記載すべきとする理由
これは唯一つ、
「呼び出し元に例外処理を強制的に書かせること」
これに尽きるかなと思ってる。  
そもそもとしてthrowsを書くことになるのは明示的にthrowされる例外があるわけで  
その例外が発生したことに対する例外処理は常に書くべきであるという考えのもとにあるのだろうなと。  
だから、throwsを書かないと呼び出し元はtry-catchを書かずに例外処理を行わないことを防ぐ為にthrowsは記載すべきとすると考えてる。

## throws宣言を記載しなくても良いとする理由
これには２つ理由があって  
「そもそもJavaの仕様としてthrowsを強制させていないこと」  
基本的に自分は言語仕様として許されている行為は、意図があって許していると思っているので  
（もちろんある程度メンテされている最近の言語については）  
この辺りはその意図を理解する必要が言語使用者は理解すべきだと思っているし、  
従うべきだとは思っています。それがその言語を使う上で理想とする形であると思うので。

「非検査例外と検査例外の区別がなくなってしまう」  
多分これが最たるthrows宣言を記載しなくても良いとする理由かなと。
そもそもとして、catchさせる例外をthrowするならば検査例外を指定すべきなので、  
投げる例外の種別を誤っているのではないかという。  
その例外は呼び出し側が悪くて発生するんだよね？？プログラムのミスだから、その時点でcatchしたところで何ができるの？？って気持ちになることが多いんじゃないかなっておもう。

## じゃあ非検査例外をcatchしなくていいのかよ
しなくていいよ。異常終了させて、バグとしてプログラムの修正に入るのが正しい形。  
そんなふうにおもいました。

## どうしてもthrowsを書かなきゃいけない時
そういう現場もあるんじゃないかと、、そういうときは検査例外を投げるようにしてあげればいいんじゃないかな。
